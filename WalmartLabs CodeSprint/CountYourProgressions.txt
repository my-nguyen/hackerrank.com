John has a sequence of numbers with him. He is interested in finding out the
number of subsequences of his sequence that are arithmetic progressions.

A subsequence is a sequence that can be derived from another sequence by
deleting some elements without changing the order of the remaining elements. For
example, the sequence {4,6,9} is a subsequence of {4,5,6,7,8,9} obtained after
removal of elements 5,7,8. The relation of one sequence being the subsequence of
another is a preorder.

Arithmetic Progression: A sequence is an arithmetic progression if the
difference between consecutive elements is constant. If the initial term of
arithmetic progression is b[1] and the common difference is D then:
b[n] = b[1] + (n-1)*D

Note that empty sequence or a single element sequence are arithmetic
progressions.

Input Format
The first line of the input is an integer , total number of elements in the
sequence. Each of the next lines contains a single integer representing an
element of the sequence.

Constraints
Let be the number of elements in input sequence. Let a[i] represent the element
of the input sequence.
* 1 <= n <= 200000
* 1 <= a[i] <= 100

Output Format

Let A be the number of subsequences that are arithmetic progressions. Print the
value of A modulo 1000000009 (10^9 + 9).

Use PyPy and PyPy3 instead of Python2 and Python3 as a few test cases might not
pass in Python2 and Python3

Sample Input
3
2
4
2

Sample Output
7
